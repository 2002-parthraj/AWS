AWSTemplateFormatVersion: 2010-09-09
Description: This Template create AWS WAF V2 and Attached to ELB.
# Metadata: 

Parameters: 
  EnviromentName:
    Type: String
    Default: Production
    Description: Environment Name that will be used to name resources.

  ELBstackName:
    Type: String
    Default: NGINX-AS-ELB-Environment
    Description: ELB Stack Name that will be used to name resources.

  # ELBARN:
  #   Type: String
  #   Default: "arn:aws:elasticloadbalancing:ap-south-1:992382679841:loadbalancer/app/PRODelopmentelb/db369b7d2924588d"
  #   Description: ELB

# Mappings: 

# Conditions: 

Resources: 

  PRODWAF:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: !Sub ${EnviromentName}-WAF
      Description: !Sub ${EnviromentName}-WAF
      Scope: REGIONAL
      CustomResponseBodies:
        GeoSpecific-Block:
          Content: '{ "Error": "403 Forbidden You have Blocked By GeoSpecific-Block" }'
          ContentType: APPLICATION_JSON
      Tags: 
        - Key: Name
          Value: !Sub ${EnviromentName}-WAF
      DefaultAction: 
        Allow: {}
      VisibilityConfig: 
        CloudWatchMetricsEnabled: False
        MetricName: SampleRuleGroupMetrics
        SampledRequestsEnabled: True
      Rules:
      - Name: WhiteListed-IP
        Priority: 0
        Statement:
          IPSetReferenceStatement:
            Arn: !GetAtt PRODWHITEIP.Arn
        Action:
          Allow: {}
        VisibilityConfig:
          SampledRequestsEnabled: True
          CloudWatchMetricsEnabled: False
          MetricName: WhiteListed-IP
      - Name: GeoSpecific-Rule
        Priority: 1
        Statement:
          NotStatement:
            Statement:
              GeoMatchStatement:
                CountryCodes:
                  - IN
        Action:
          Block:
            CustomResponse: 
              ResponseCode: 403
              CustomResponseBodyKey: GeoSpecific-Block
        VisibilityConfig:
          SampledRequestsEnabled: True
          CloudWatchMetricsEnabled: False
          MetricName: GeoSpecific-Rule
      - Name: BlackListed-IP
        Priority: 2
        Statement:
          IPSetReferenceStatement:
            Arn: !GetAtt PRODBLACKIP.Arn
        Action:
          Block: {}
        VisibilityConfig:
          SampledRequestsEnabled: True
          CloudWatchMetricsEnabled: False
          MetricName: BlackListed-IP
      - Name: AWSManagedRulesAdminProtectionRule
        Priority: 3
        OverrideAction:
          None: {}
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesAdminProtectionRuleSet
        VisibilityConfig:
          SampledRequestsEnabled: True
          CloudWatchMetricsEnabled: False
          MetricName: AWSManagedRulesAdminProtectionRule
      - Name: AWSManagedRulesAmazonIpReputationList
        Priority: 4
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesAmazonIpReputationList
        OverrideAction:
          None: {}
        VisibilityConfig:
          SampledRequestsEnabled: True
          CloudWatchMetricsEnabled: False
          MetricName: AWSManagedRulesAmazonIpReputationList

      - Name: AWSManagedRulesAnonymousIpList
        Priority: 5
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesAnonymousIpList
        OverrideAction:
          None: {}
        VisibilityConfig:
          SampledRequestsEnabled: True
          CloudWatchMetricsEnabled: False
          MetricName: AWSManagedRulesAnonymousIpList

      - Name: AWSManagedRulesCommonRule
        Priority: 6
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesCommonRuleSet
        OverrideAction:
          None: {}
        VisibilityConfig:
          SampledRequestsEnabled: True
          CloudWatchMetricsEnabled: False
          MetricName: AWSManagedRulesCommonRule

      - Name: AWSManagedRulesLinuxRule
        Priority: 7
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesLinuxRuleSet
        OverrideAction:
          None: {}
        VisibilityConfig:
          SampledRequestsEnabled: True
          CloudWatchMetricsEnabled: False
          MetricName: AWSManagedRulesLinuxRule

      - Name: AWSManagedRulesPHPRule
        Priority: 8
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesPHPRuleSet
        OverrideAction:
          None: {}
        VisibilityConfig:
          SampledRequestsEnabled: True
          CloudWatchMetricsEnabled: False
          MetricName: AWSManagedRulesPHPRule

      - Name: AWSManagedRulesUnixRule
        Priority: 9
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesUnixRuleSet
        OverrideAction:
          None: {}
        VisibilityConfig:
          SampledRequestsEnabled: True
          CloudWatchMetricsEnabled: False
          MetricName: AWSManagedRulesUnixRule

      - Name: AWSManagedRulesSQLiRule
        Priority: 10
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesSQLiRuleSet
        OverrideAction:
          None: {}
        VisibilityConfig:
          SampledRequestsEnabled: True
          CloudWatchMetricsEnabled: False
          MetricName: AWSManagedRulesSQLiRule
      
      - Name: AWSManagedRulesWindowsRule
        Priority: 11
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesWindowsRuleSet
        OverrideAction:
          None: {}
        VisibilityConfig:
          SampledRequestsEnabled: True
          CloudWatchMetricsEnabled: False
          MetricName: AWSManagedRulesWindowsRule

      - Name: AWSManagedRulesWordPressRule
        Priority: 12
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesWordPressRuleSet
        OverrideAction:
          None: {}
        VisibilityConfig:
          SampledRequestsEnabled: True
          CloudWatchMetricsEnabled: False
          MetricName: AWSManagedRulesWordPressRule

      - Name: AWSManagedRulesKnownBadInputsRule
        Priority: 13
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesKnownBadInputsRuleSet
        OverrideAction: 
          None: {}
        VisibilityConfig:
          SampledRequestsEnabled: True
          CloudWatchMetricsEnabled: False
          MetricName: AWSManagedRulesKnownBadInputsRule
      


  # PRODWAFASSOCIATE:
  #   Type: AWS::WAFv2::WebACLAssociation
  #   Properties:
  #     WebACLArn: !GetAtt PRODWAF.Arn
  #     ResourceArn: 
  #       Fn::ImportValue:
  #         Fn::Sub: '${ELBstackName}-PRODelopmentelb'

  PRODWHITEIP:
    Type: AWS::WAFv2::IPSet
    Properties:
      Name: WAF-WHITELIST-IP
      Description: SET Of WHITELIST-IP
      IPAddressVersion: IPV4
      Addresses: 
        - 13.127.202.196/32
        - 13.127.21.229/32
        - 3.108.214.20/32
        - 203.88.128.170/32
        - 182.75.147.198/32
        - 103.254.245.202/32
        - 103.54.23.110/32
        - 203.109.113.58/32
      Scope: REGIONAL
      Tags: 
        - Key: Name
          Value: !Sub ${EnviromentName}-WAF-WHITELIST-IP

  PRODBLACKIP:
    Type: AWS::WAFv2::IPSet
    Properties:
      Name: WAF-BLACKLIST-IP
      Description: SET oF BLACKLIST-IP
      IPAddressVersion: IPV4
      Addresses: 
        - 185.224.128.10/32
      Scope: REGIONAL
      Tags: 
        - Key: Name
          Value: !Sub ${EnviromentName}-WAF-BLACKLIST-IP

 


# Outputs:

#   PRODWAF:
#     Description: PRODelopment WAF intigrated with ELB
#     Value: !Ref PRODWAF
#     Export: 
#       Name: !Sub '${AWS::StackName}-PRODWAF'

#   PRODELBASSOCIATE:
#     Description: PRODelopment WAF intigrated with ELB
#     Value: !Ref PRODWAFASSOCIATE
#     Export: 
#       Name: !Sub '${AWS::StackName}-PRODELBASSOCIATE'
  