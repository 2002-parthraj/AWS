AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template for a VPC with public and private subnets, corresponding route tables, an EC2 instance in Hyderabad, and connected to a Transit Gateway in Mumbai. NAT Gateway is removed, and private subnet routes traffic directly to the Internet Gateway.

Parameters:
  VpcCidr:
    Type: String
    Default: '10.70.0.0/16'
    Description: The CIDR block for the VPC.

  PublicSubnetCidr:
    Type: String
    Default: '10.70.1.0/24'
    Description: The CIDR block for the public subnet.

  PrivateSubnetCidr:
    Type: String
    Default: '10.70.2.0/24'
    Description: The CIDR block for the private subnet.

  InstanceType:
    Type: String
    Default: t2.micro
    Description: EC2 instance type
    AllowedValues:
      - t2.micro
      - t3.micro
      - t3a.micro
      - t2.small
      - t3.small
      - t3a.small
    ConstraintDescription: Must be a valid EC2 instance type.

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: The name of the EC2 Key Pair to allow SSH access to the instance.
    Default: hyderabad-test

  AmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    Description: AMI ID for the EC2 instance. Default is the latest Amazon Linux 2 AMI.

  MumbaiTransitGatewayId:
    Type: String
    Description: The Transit Gateway ID in the Mumbai region.

Resources:
  # VPC
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: HYD-MUMBAI-VPC

  # Subnets
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select 
        - 0
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: PUBSUB-1A-HYDERABAD

  PrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCidr
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select 
        - 1
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: PRISUB-1A-HYDERABAD

  # Internet Gateway
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: HYD-ITGW

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Route Tables
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PUBRT-1A-HYDERABAD

  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PRIRT-1A-HYDERABAD

  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  PrivateRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  # Security Group
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group for connection-test-2
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # Allow SSH from everywhere
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  # Allow HTTP from everywhere
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0  # Allow HTTPS from everywhere
      Tags:
        - Key: Name
          Value: connection-test-2-SG

  # EC2 Instance
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: !Ref AmiId
      SubnetId: !Ref PrivateSubnet
      SecurityGroupIds:
        - !Ref SecurityGroup
      Tags:
        - Key: Name
          Value: connection-test-2
      UserData:
        Fn::Base64: 
          !Sub |
            #!/bin/bash
            yum update -y
            yum install open-vm-tools -y
            yum install net-tools -y
            yum install curl -y

  # Transit Gateway Attachment in Hyderabad
  TransitGatewayAttachment:
    Type: 'AWS::EC2::TransitGatewayAttachment'
    Properties:
      TransitGatewayId: !Ref MumbaiTransitGatewayId
      VpcId: !Ref VPC
      SubnetIds: 
        - !Ref PrivateSubnet
      Tags:
        - Key: Name
          Value: HYD-MUMBAI-TGW-ATTACHMENT

  # Private Route Table - Transit Gateway Route
  PrivateRouteToTGW:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: '10.60.0.0/16'  # Mumbai VPC CIDR
      TransitGatewayId: !Ref MumbaiTransitGatewayId

Outputs:
  VpcId:
    Description: VPC ID in Hyderabad
    Value: !Ref VPC

  PrivateSubnetId:
    Description: Private Subnet ID in Hyderabad
    Value: !Ref PrivateSubnet

  PublicSubnetId:
    Description: Public Subnet ID in Hyderabad
    Value: !Ref PublicSubnet

  EC2InstanceId:
    Description: EC2 Instance ID in Hyderabad
    Value: !Ref EC2Instance
